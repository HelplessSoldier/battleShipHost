{"version":3,"file":"bundlefa19bb80b22b0ece1aca.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACPA,eAAe,mBAAO,CAAC,yCAAU;AACjC,kBAAkB,mBAAO,CAAC,+CAAa;AACvC,kBAAkB,mBAAO,CAAC,+CAAa;AACvC,aAAa,mBAAO,CAAC,qCAAQ;AAC7B,mBAAmB,mBAAO,CAAC,gGAA0C;;AAErE,0BAA0B,mBAAO,CAAC,mFAAqC;AACvE,2BAA2B,mBAAO,CAAC,iGAA4C;AAC/E,0BAA0B,mBAAO,CAAC,6GAAkD;AACpF,wBAAwB,mBAAO,CAAC,6DAA0B;AAC1D,uBAAuB,mBAAO,CAAC,qKAA8E;;AAE7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,kBAAkB;AACtC,sBAAsB,iBAAiB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;;;;;;;;;;AC5DA,sBAAsB,mBAAO,CAAC,6FAAoC;AAClE,mBAAmB,mBAAO,CAAC,uFAAiC;AAC5D,sBAAsB,mBAAO,CAAC,gEAA0B;AACxD,kBAAkB,mBAAO,CAAC,qFAAgC;AAC1D,kBAAkB,mBAAO,CAAC,qFAAgC;AAC1D,0BAA0B,mBAAO,CAAC,sDAAqB;AACvD,yBAAyB,mBAAO,CAAC,sDAAqB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,yBAAyB;;AAE3E,oBAAoB,iBAAiB;AACrC,gDAAgD,cAAc;;AAE9D,sBAAsB,gBAAgB;AACtC,mDAAmD,eAAe;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kDAAkD,iCAAiC;;AAEnF,oBAAoB,iBAAiB;AACrC,gDAAgD,cAAc;;AAE9D,sBAAsB,gBAAgB;AACtC,mDAAmD,eAAe;AAClE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC,sBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC3PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACnCA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B,oBAAoB,WAAW;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACzBA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACTA,sBAAsB,mBAAO,CAAC,gEAA0B;AACxD,qBAAqB,mBAAO,CAAC,2FAAoC;AACjE,aAAa,mBAAO,CAAC,iFAAoC;AACzD,uBAAuB,mBAAO,CAAC,2CAAY;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,GAAG;;AAEH,mDAAmD,+BAA+B;AAClF;AACA;AACA,GAAG;;AAEH;AACA;AACA,MAAM,iCAAiC;AACvC;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA,oDAAoD,0BAA0B;AAC9E;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL,iDAAiD,wBAAwB;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL,0CAA0C,mBAAmB;;AAE7D,oDAAoD,sCAAsC;AAC1F;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD,8BAA8B;;AAEtF,oDAAoD,uBAAuB;;AAE3E;AACA;AACA,GAAG;;AAEH,iDAAiD,yBAAyB;AAC1E;AACA;AACA,MAAM,uBAAuB;AAC7B;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;;;;;;;;;;AC9HA,sBAAsB,mBAAO,CAAC,gEAA0B;;AAExD;AACA;AACA,iDAAiD,uBAAuB;;AAExE;AACA;AACA;;AAEA,wDAAwD,4BAA4B;AACpF;AACA,iDAAiD,qBAAqB;AACtE;AACA;;AAEA,qDAAqD,yBAAyB;AAC9E;AACA,8CAA8C,qBAAqB;AACnE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;;;;AClCA,sBAAsB,mBAAO,CAAC,gEAA0B;;AAExD;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,QAAQ,gDAAgD;AACxD;AACA;;AAEA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA,QAAQ,4BAA4B;AACpC;AACA;;AAEA;AACA;AACA,QAAQ,sBAAsB;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;AC7CA,sBAAsB,mBAAO,CAAC,gEAA0B;;AAExD;AACA;AACA,2CAA2C,kBAAkB,KAAK,QAAQ;AAC1E;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCzCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,iCAAiC;;WAEjC;WACA;WACA;WACA,KAAK;WACL,eAAe;WACf;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA;;;;;WCrFA;;;;;;;;;;ACAA,gJAAqB;AACrB,6BAA6B,mBAAO,CAAC,6DAAwB;AAC7D,aAAa,mBAAO,CAAC,6CAAgB;AACrC,wBAAwB,mBAAO,CAAC,6DAAwB;AACxD,yBAAyB,mBAAO,CAAC,qDAAoB;;AAErD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA,IAAI;AACJ;AACA;AACA;;AAEA","sources":["webpack://top_battleShip/./src/classes/cpuPlayer.js","webpack://top_battleShip/./src/classes/game.js","webpack://top_battleShip/./src/classes/gameBoard.js","webpack://top_battleShip/./src/classes/gameBoardFunctions/canAddShip.js","webpack://top_battleShip/./src/classes/gameBoardFunctions/create2dArray.js","webpack://top_battleShip/./src/classes/gameBoardFunctions/enemyMove.js","webpack://top_battleShip/./src/classes/gameBoardFunctions/sunkCheck.js","webpack://top_battleShip/./src/classes/player.js","webpack://top_battleShip/./src/classes/ship.js","webpack://top_battleShip/./src/helpers/createElement.js","webpack://top_battleShip/./src/pages/boardSetupFunctions/allShipsUsed.js","webpack://top_battleShip/./src/pages/boardSetupPage.js","webpack://top_battleShip/./src/pages/gamePage.js","webpack://top_battleShip/./src/pages/playerNamePage.js","webpack://top_battleShip/./src/pages/winnerPage.js","webpack://top_battleShip/webpack/bootstrap","webpack://top_battleShip/webpack/runtime/compat get default export","webpack://top_battleShip/webpack/runtime/define property getters","webpack://top_battleShip/webpack/runtime/ensure chunk","webpack://top_battleShip/webpack/runtime/get javascript chunk filename","webpack://top_battleShip/webpack/runtime/global","webpack://top_battleShip/webpack/runtime/hasOwnProperty shorthand","webpack://top_battleShip/webpack/runtime/load script","webpack://top_battleShip/webpack/runtime/make namespace object","webpack://top_battleShip/webpack/runtime/publicPath","webpack://top_battleShip/webpack/runtime/jsonp chunk loading","webpack://top_battleShip/webpack/runtime/nonce","webpack://top_battleShip/./src/index.js"],"sourcesContent":["class CpuPlayer {\n  constructor(name, game) {\n    this.name = name;\n    this.ships = game.getDefaultShipList();\n  }\n}\n\nmodule.exports = CpuPlayer;\n","const Player = require(\"./player\");\nconst CpuPlayer = require(\"./cpuPlayer\");\nconst GameBoard = require(\"./gameBoard\");\nconst Ship = require(\"./ship\");\nconst canAddShip = require(\"../classes/gameBoardFunctions/canAddShip\");\n\nconst submarineIconPath = require(\"../assets/submarine-svgrepo-com.svg\");\nconst battleshipIconPath = require(\"../assets/cruiser-military-svgrepo-com.svg\");\nconst destroyerIconPath = require(\"../assets/boat-collection-filled-svgrepo-com.svg\");\nconst carrierIconPath = require(\"../assets/1540235856.svg\");\nconst patrolIconPath = require(\"../assets/4047322-boat-harbour-seagoing-ship-tug-tugboat-tugboats_113549.svg\");\n\nclass Game {\n  constructor(playerName, cpuName) {\n    this.player = new Player(playerName, this);\n    this.cpu = new CpuPlayer(cpuName, this);\n    this.playerBoard = new GameBoard(10, 10, \"empty\");\n    this.cpuBoard = new GameBoard(10, 10, \"empty\");\n    this.generateRandomBoard(this.cpuBoard, this.cpu);\n  }\n\n  getDefaultShipList() {\n    const carrier = new Ship(5, \"Carrier\", null, null, carrierIconPath);\n    const battleship = new Ship(4, \"Battleship\", null, null, battleshipIconPath);\n    const destroyer = new Ship(3, \"Destroyer\", null, null, destroyerIconPath);\n    const submarine = new Ship(3, \"Submarine\", null, null, submarineIconPath);\n    const patrol = new Ship(2, \"Patrol\", null, null, patrolIconPath);\n    const shipList = [carrier, battleship, destroyer, submarine, patrol];\n    return shipList;\n  }\n\n  generateRandomBoard(board, player) {\n    for (let i = 0; i < board.height; i++) {\n      for (let j = 0; j < board.width; j++) {\n        board.grid[i][j] === board.fill;\n      }\n    }\n\n    const ships = player.ships;\n    for (let ship of ships) {\n      board.removeShip(ship);\n      const [location, delta] = pickRandom(board, ship);\n      ship.location = location;\n      ship.delta = delta;\n      board.addShip(ship);\n    }\n  }\n}\n\nfunction pickRandom(board, ship) {\n  x = Math.floor(Math.random() * board.height);\n  y = Math.floor(Math.random() * board.width);\n  delta = (Math.random() > 0.5) ? [1, 0] : [0, 1];\n  if (canAddShip(board.height, board.width, [x, y], delta, ship.len, board.grid)) {\n    return [[x, y], delta];\n  } else {\n    return pickRandom(board, ship);\n  }\n}\n\nmodule.exports = Game;\n","const create2dArray = require(\"./gameBoardFunctions/create2dArray\");\nconst canAddShip = require(\"./gameBoardFunctions/canAddShip\");\nconst createElement = require(\"../helpers/createElement\");\nconst enemyMove = require(\"./gameBoardFunctions/enemyMove\");\nconst sunkCheck = require(\"./gameBoardFunctions/sunkCheck\");\nconst renderWinnderPage = require(\"../pages/winnerPage\");\nconst renderWinnerPage = require(\"../pages/winnerPage\");\n\nclass GameBoard {\n  constructor(width, height) {\n    this.height = height;\n    this.width = width;\n    this.fill = \"empty\";\n    this.impact = \"impact\";\n    this.shipSquare = \"ship\";\n    this.hitShip = \"hitShip\";\n    this.preview = \"preview\";\n    this.sunkShip = \"sunkShip\";\n    this.grid = create2dArray(width, height, this.fill);\n    this.addedShips = [];\n  }\n\n  receiveAttack(location) {\n    const x = location[0];\n    const y = location[1];\n\n    if (this.grid[x][y] === this.shipSquare) {\n      this.grid[x][y] = this.hitShip;\n    } else if (this.grid[x][y] === this.fill) {\n      this.grid[x][y] = this.impact;\n    }\n  }\n\n  sinkShip(ship) {\n    const x = ship.location[0];\n    const y = ship.location[1];\n    const dx = ship.delta[0];\n    const dy = ship.delta[1];\n\n    for (let i = 0; i < ship.len; i++) {\n      this.grid[x + (i * dx)][y + (i * dy)] = this.sunkShip;\n    }\n  }\n\n  canAttackSquare(location) {\n    const x = location[0];\n    const y = location[1];\n\n    if (this.grid[x][y] === this.marker || this.grid[x][y] === this.hitShip) {\n      return false;\n    }\n    return true;\n  }\n\n  addShip(ship) {\n    const x = ship.location[0];\n    const y = ship.location[1];\n    const dx = ship.delta[0];\n    const dy = ship.delta[1];\n\n    if (canAddShip(this.height, this.width, ship.location, ship.delta, ship.len, this.grid)) {\n      for (let i = 0; i < ship.len; i++) {\n        this.grid[x + dx * i][y + dy * i] = this.shipSquare;\n      }\n      this.addedShips.push(ship);\n    }\n  }\n\n  removeShip(ship) {\n    if (ship.location === null) {\n      return;\n    }\n\n    const x = ship.location[0];\n    const y = ship.location[1];\n    const dx = ship.delta[0];\n    const dy = ship.delta[1];\n\n    for (let i = 0; i < ship.len; i++) {\n      this.grid[x + dx * i][y + dy * i] = this.fill;\n    }\n\n    const indexToRemove = this.addedShips.findIndex(\n      existingShip => existingShip.name === ship.name\n    );\n\n    if (indexToRemove !== -1) {\n      this.addedShips.splice(indexToRemove, 1);\n    }\n\n    ship.location = null;\n    ship.delta = null;\n  }\n\n  hasAliveShips(board) {\n    for (let row of board) {\n      for (let cell of row) {\n        if (cell === this.shipSquare) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  renderSelfSetup(shipsVisible, selectedShip, currentDelta) {\n    const boardContainer = createElement(\"div\", { class: \"boardContainer\" });\n\n    for (let i = 0; i < this.height; i++) {\n      const rowElement = createElement(\"div\", { class: \"row\" });\n\n      for (let j = 0; j < this.width; j++) {\n        const cellElement = createElement(\"div\", { class: \"cell\" });\n\n        cellElement.addEventListener(\"mousedown\", () => {\n          selectedShip.delta = currentDelta;\n          selectedShip.location = [i, j];\n          if (\n            canAddShip(\n              this.height,\n              this.width,\n              selectedShip.location,\n              selectedShip.delta,\n              selectedShip.len,\n              this.grid\n            ) &&\n            !this._inAddedShips(selectedShip)\n          ) {\n            this.addShip(selectedShip);\n          }\n        });\n\n        cellElement.addEventListener(\"mouseover\", () => {\n          if (\n            selectedShip !== null &&\n            canAddShip(this.height, this.width, [i, j], currentDelta, selectedShip.len, this.grid)\n          ) {\n            this._previewHighlight(selectedShip, currentDelta, i, j);\n          }\n        });\n\n        if (this.grid[i][j] === \"preview\") {\n          cellElement.style.backgroundColor = \"red\";\n        }\n\n        if (this.grid[i][j] === this.shipSquare && shipsVisible) {\n          cellElement.style.backgroundColor = \"orange\";\n        }\n\n        if (this.grid[i][j] === this.sunkShip) {\n          cellElement.style.backgroundColor = \"black\";\n        }\n\n        rowElement.append(cellElement);\n      }\n      boardContainer.append(rowElement);\n    }\n    return boardContainer;\n  }\n\n  renderSelfGameplay(isPlayer, game) {\n\n    const boardContainer = createElement(\"div\", { class: \"gameplayBoardContainer\" });\n\n    for (let i = 0; i < this.height; i++) {\n      const rowElement = createElement(\"div\", { class: \"row\" });\n\n      for (let j = 0; j < this.width; j++) {\n        const cellElement = createElement(\"div\", { class: \"cell\" });\n        let squareValue = this.grid[i][j];\n\n        if (isPlayer) {\n          if (squareValue === this.shipSquare) {\n            cellElement.style.backgroundColor = \"orange\";\n          }\n        }\n\n        if (!isPlayer) {\n          cellElement.addEventListener(\"mouseover\", () => {\n            if (squareValue !== this.hitShip && squareValue !== this.impact && squareValue !== this.sunkShip) {\n              cellElement.style.backgroundColor = \"#fffb29\";\n            }\n          });\n\n          cellElement.addEventListener(\"mousedown\", () => {\n            squareValue = this.grid[i][j];\n            if (squareValue !== this.hitShip && squareValue !== this.impact && squareValue !== this.sunkShip) {\n\n              this.receiveAttack([i, j]);\n              sunkCheck(game);\n\n              if (!this.hasAliveShips(game.cpuBoard.grid)) {\n                let winnerEvent = new Event(\"winnerPlayer\");\n                document.dispatchEvent(winnerEvent);\n              }\n\n              enemyMove(game);\n              if (!this.hasAliveShips(game.playerBoard.grid)) {\n                let winnerEvent = new Event(\"winnerCpu\");\n                document.dispatchEvent(winnerEvent);\n              }\n            }\n          });\n        }\n\n        if (squareValue === this.impact) {\n          cellElement.style.backgroundColor = \"#20509e\";\n        }\n\n        if (squareValue === this.hitShip) {\n          cellElement.style.backgroundColor = \"red\";\n        }\n\n        if (squareValue === this.sunkShip) {\n          cellElement.style.backgroundColor = \"orange\";\n        }\n\n        rowElement.append(cellElement);\n      }\n      boardContainer.append(rowElement);\n    }\n    return boardContainer\n  }\n\n  _previewHighlight(selectedShip, currentDelta, x, y) {\n    this._clearPreview();\n    for (let i = 0; i < selectedShip.len; i++) {\n      this.grid[currentDelta[0] * i + x][currentDelta[1] * i + y] = this.preview;\n    }\n  }\n\n  _clearPreview() {\n    for (let i = 0; i < this.height; i++) {\n      for (let j = 0; j < this.width; j++) {\n        if (this.grid[i][j] === this.preview) {\n          this.grid[i][j] = this.fill;\n        }\n      }\n    }\n  }\n\n  _inAddedShips(addAttemptShip) {\n    for (let ship of this.addedShips) {\n      if (ship.name === addAttemptShip.name) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nmodule.exports = GameBoard;\n","function _isInBounds(currentSquare, boardHeight, boardWidth) {\n  if (\n    currentSquare[0] >= boardHeight ||\n    currentSquare[1] >= boardWidth ||\n    currentSquare[0] < 0 ||\n    currentSquare[1] < 0\n  ) {\n    return false;\n  }\n  return true;\n}\n\nfunction canAddShip(boardHeight, boardWidth, location, delta, length, grid) {\n  const x = location[0];\n  const y = location[1];\n  const dx = delta[0];\n  const dy = delta[1];\n\n  for (let i = 0; i < length; i++) {\n    const currentSquareX = x + dx * i;\n    const currentSquareY = y + dy * i;\n\n    if (\n      !_isInBounds([currentSquareX, currentSquareY], boardHeight, boardWidth)\n    ) {\n      return false;\n    }\n\n    if (grid[currentSquareX][currentSquareY] === \"ship\") {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = canAddShip;\n","function create2dArray(width, height, fill) {\n  let res = [];\n  for (let i = 0; i < height; i++) {\n    let row = [];\n    for (let i = 0; i < width; i++) {\n      row.push(fill);\n    }\n    res.push(row);\n  }\n  return res;\n}\n\nmodule.exports = create2dArray;\n","function enemyMove(game) {\n  let x = Math.floor(Math.random() * game.playerBoard.height);\n  let y = Math.floor(Math.random() * game.playerBoard.width);\n  const impactSquare = game.playerBoard.impact;\n  const hitSquare = game.playerBoard.hitShip\n\n  if (game.playerBoard.grid[x][y] !== impactSquare && game.playerBoard.grid[x][y] !== hitSquare) {\n    game.playerBoard.receiveAttack([x, y]);\n  } else {\n    enemyMove(game);\n  }\n}\n\nfunction smarterEnemyMoves(game) {\n  const width = game.playerBoard.width;\n  const height = game.playerBoard.height;\n  const grid = game.playerBoard.grid;\n  const hitShip = game.playerBoard.hitShip;\n  const fill = game.playerBoard.fill;\n  const ship = game.playerBoard.shipSquare;\n\n  const searchDeltas = [[1, 0], [0, 1], [-1, 0], [0, -1]];\n\n  // Search for a hit ship on the board\n  let shipIdx = [-1, -1];\n  let searchDirection = [0, 0];\n\n  for (let i = 0; i < height; i++) {\n    for (let j = 0; j < width; j++) {\n      if (grid[i][j] === hitShip) {\n\n        // Check surrounding cells for a hit ship\n        for (let delta of searchDeltas) {\n          const newX = i + delta[0];\n          const newY = j + delta[1];\n\n          if (newX >= 0 && newX < height && newY >= 0 && newY < width && grid[newX][newY] === hitShip) {\n            searchDirection = delta;\n            shipIdx = [i, j];\n            break;\n          }\n        }\n\n        searchDirection = searchDeltas[Math.floor(Math.random() * 4)];\n        shipIdx = [i, j];\n        break;\n      }\n    }\n    if (searchDirection[0] !== 0 || searchDirection[1] !== 0) {\n      break;\n    }\n  }\n\n  if (shipIdx[0] === -1 && shipIdx[1] === -1) {\n    // No hit ship found, perform a random move\n    enemyMove(game);\n    return;\n  }\n\n  // Move in the searchDirection until an empty cell is found\n  let x = shipIdx[0] + searchDirection[0];\n  let y = shipIdx[1] + searchDirection[1];\n\n  while (x >= 0 && x < height && y >= 0 && y < width && grid[x][y] === hitShip) {\n    x += searchDirection[0];\n    y += searchDirection[1];\n  }\n\n  if (x >= 0 && x < height && y >= 0 && y < width &&\n    (grid[x][y] === fill || grid[x][y] === ship)) {\n    // Valid move, attack the cell\n    game.playerBoard.receiveAttack([x, y]);\n  } else {\n    // Invalid move, perform a random move\n    enemyMove(game);\n  }\n}\n\nmodule.exports = smarterEnemyMoves;\n\n","function sunkCheckEnemy(game) {\n  const ships = game.cpu.ships;\n  for (let ship of ships) {\n    if (ship.isSunk(game.cpuBoard)) {\n      game.cpuBoard.sinkShip(ship);\n    }\n  }\n\n}\n\nmodule.exports = sunkCheckEnemy;\n","class Player {\n  constructor(name, game) {\n    this.name = name;\n    this.ships = game.getDefaultShipList();\n  }\n}\n\nmodule.exports = Player;\n","class Ship {\n  constructor(len, name, location, delta, iconSrc) {\n    this.len = len;\n    this.name = name;\n    this.location = location;\n    this.delta = delta;\n    this.hitSquares = [];\n    this.iconSrc = iconSrc;\n  }\n\n  isSunk(board) {\n    const x = this.location[0];\n    const y = this.location[1];\n    const dx = this.delta[0];\n    const dy = this.delta[1];\n\n    for (let i = 0; i < this.len; i++) {\n      if (board.grid[x + dx * i][y + dy * i] === \"ship\") {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nmodule.exports = Ship;\n","function createElement(tag, attributes = {}, textContent = \"\") {\n  const element = document.createElement(tag);\n  for (const attribute in attributes) {\n    element.setAttribute(attribute, attributes[attribute]);\n  }\n  element.textContent = textContent;\n  return element;\n}\n\nmodule.exports = createElement;\n","function allShipsUsed(shipsList) {\n  for (let ship of shipsList) {\n    if (ship.location === null) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = allShipsUsed;\n","const createElement = require(\"../helpers/createElement\");\nconst allShipsUsed = require(\"./boardSetupFunctions/allShipsUsed\");\nconst xSvg = require(\"../assets/x-symbol-svgrepo-com.svg\");\nconst renderGamePage = require(\"./gamePage\");\n\nfunction renderSetupPage(game, root) {\n  root.classList.add(\"setupPage\");\n  let selectedShip = null;\n  let lastSelected = null;\n\n  let boardAndSelectionContainer = createElement(\"div\", {\n    id: \"boardAndSelectionContainer\"\n  });\n\n  // ship direction buttons ------------------------------------------------------------------------\n  let currentDelta = [1, 0];\n\n  const directionButtonsContainer = createElement(\"div\", {\n    id: \"directionButtonsContainer\"\n  });\n\n  const verticalButton = createElement(\"button\", { id: \"directionVerticalButton\" }, \"Vertical\");\n  verticalButton.addEventListener(\"click\", () => {\n    currentDelta = [1, 0];\n  });\n\n  const horizontalButton = createElement(\n    \"button\",\n    { id: \"directionHorizontalButton\" },\n    \"Horizontal\"\n  );\n  horizontalButton.addEventListener(\"click\", () => {\n    currentDelta = [0, 1];\n  });\n\n  directionButtonsContainer.append(verticalButton, horizontalButton);\n\n  // board -----------------------------------------------------------------------------------------\n  const gameBoardContainer = createElement(\"div\", { id: \"gameBoardContainer\" });\n  let running = true;\n\n  function updateBoard() {\n    gameBoardContainer.innerHTML = \"\";\n\n    const gameBoardElement = game.playerBoard.renderSelfSetup(true, selectedShip, currentDelta);\n    gameBoardContainer.append(gameBoardElement);\n\n    if (running) {\n      requestAnimationFrame(updateBoard);\n    }\n  }\n\n  updateBoard();\n\n  // ship selection --------------------------------------------------------------------------------\n  const defaultShipList = game.player.ships;\n\n  const shipSelectionContainer = createElement(\"div\", {\n    id: \"shipSelectionContainer\"\n  });\n\n  for (let ship of defaultShipList) {\n    const shipAndRemoveButtonContainer = createElement(\"div\", {\n      class: \"shipAndRemoveButtonContainer\"\n    });\n    const shipContainer = createElement(\"div\", { class: \"shipContainer\" });\n\n    shipContainer.addEventListener(\"click\", () => {\n      selectedShip = ship;\n      if (lastSelected !== null) {\n        lastSelected.style.backgroundColor = \"rgb(34, 34, 34)\";\n      }\n      lastSelected = shipContainer;\n      shipContainer.style.backgroundColor = \"#FFFFFF\";\n    });\n\n    const shipIcon = createElement(\"img\", {\n      class: \"shipIcon\",\n      src: ship.iconSrc\n    });\n\n    const shipName = createElement(\"p\", { class: \"shipName\" }, ship.name);\n\n    const removeShipButton = createElement(\"img\", { class: \"removeShipButton\", src: xSvg });\n    removeShipButton.addEventListener(\"click\", () => {\n      removeShipButton.style.maxWidth = \"13px\";\n      game.playerBoard.removeShip(ship);\n      setTimeout(() => {\n        removeShipButton.style.maxWidth = \"21px\";\n      }, 55);\n    });\n\n    shipContainer.append(shipIcon, shipName);\n    shipAndRemoveButtonContainer.append(shipContainer, removeShipButton);\n    shipSelectionContainer.append(shipAndRemoveButtonContainer);\n  }\n  boardAndSelectionContainer.append(gameBoardContainer, shipSelectionContainer);\n\n  // randomize and complete button ----------------------------------------------------------------\n  const bottomButtonsContainer = createElement(\"div\", { id: \"bottomButtonsContainer\" });\n\n  const randomizeButton = createElement(\"button\", { id: \"randomizeButton\" }, \"Randomize!\");\n\n  randomizeButton.addEventListener(\"click\", () => {\n    game.generateRandomBoard(game.playerBoard, game.player);\n  });\n\n  const submitButton = createElement(\"button\", { id: \"setupSubmitButton\" }, \"Finished\");\n  const unfilledMessage = createElement(\n    \"h2\",\n    { id: \"unfilledMessage\" },\n    \"Please place all ships. One or more are missing\"\n  );\n\n  submitButton.addEventListener(\"click\", () => {\n    if (allShipsUsed(defaultShipList)) {\n      renderGamePage(game, root);\n    } else {\n      root.append(unfilledMessage);\n    }\n  });\n\n  bottomButtonsContainer.append(randomizeButton, submitButton);\n  root.append(directionButtonsContainer, boardAndSelectionContainer, bottomButtonsContainer);\n}\n\nmodule.exports = renderSetupPage;\n","const createElement = require(\"../helpers/createElement\");\n\nfunction renderGamePage(game, parent) {\n  parent.innerHTML = \"\";\n  const boardsContainer = createElement(\"div\", { id: \"boardsContainer\" });\n\n  let running = true;\n  function renderBoards() {\n    boardsContainer.innerHTML = \"\"\n\n    const playerBoardContainer = createElement(\"div\", { id: \"playerBoardContainer\" });\n    const playerNameText = game.player.name;\n    const playerTitleBar = createElement(\"h2\", { class: \"boardTitle\" }, playerNameText);\n    const playerBoard = game.playerBoard.renderSelfGameplay(true, game);\n    playerBoardContainer.append(playerTitleBar, playerBoard);\n\n    const cpuBoardContainer = createElement(\"div\", { id: \"cpuBoardContainer\" });\n    const cpuNameText = game.cpu.name;\n    const cpuTitleBar = createElement(\"h2\", { class: \"boardTitle\" }, cpuNameText);\n    const cpuBoard = game.cpuBoard.renderSelfGameplay(false, game);\n    cpuBoardContainer.append(cpuTitleBar, cpuBoard);\n\n    boardsContainer.append(playerBoardContainer, cpuBoardContainer);\n\n    if (running) {\n      requestAnimationFrame(renderBoards);\n    }\n  }\n\n  renderBoards(parent);\n\n  parent.append(boardsContainer);\n}\n\nmodule.exports = renderGamePage;\n","const createElement = require(\"../helpers/createElement\");\n\nfunction renderPlayerNamePage(root) {\n  return new Promise((resolve, reject) => {\n    const inputContainer = createElement(\"div\", {\n      id: \"usernameInputContainer\",\n    });\n\n    const inputTag = createElement(\n      \"label\",\n      { id: \"usernameInputLabel\", for: \"usernameInput\" },\n      \"Username: \"\n    );\n\n    const inputField = createElement(\n      \"input\",\n      { id: \"usernameInput\", type: \"text\", }\n    );\n\n    const submitButton = createElement(\n      \"button\",\n      { id: \"usernameSubmitButton\" },\n      \"Submit\"\n    );\n\n    const warningMessage = createElement(\n      \"h2\",\n      { id: \"warningMessage\" },\n      \"Please enter a username.\"\n    );\n\n    submitButton.addEventListener(\"click\", () => {\n      const playerName = inputField.value.trim();\n      if (playerName.length > 0) {\n        resolve(playerName);\n      } else {\n        inputContainer.append(warningMessage);\n      }\n    });\n\n    inputContainer.append(inputTag, inputField, submitButton);\n    root.append(inputContainer);\n  });\n}\n\nmodule.exports = renderPlayerNamePage;\n","const createElement = require(\"../helpers/createElement\");\n\nfunction renderWinnerPage(winner, parent) {\n  parent.innerHTML = \"\";\n  const winnerText = createElement(\"h1\", { id: \"winnerText\" }, `${winner} won!`);\n  parent.append(winnerText);\n}\n\nmodule.exports = renderWinnerPage;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \"\" + \"4a50e734f56925681729\" + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"top_battleShip:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"bundle\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktop_battleShip\"] = self[\"webpackChunktop_battleShip\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","import(\"./style.css\");\nconst renderPlayerNamePage = require(\"./pages/playerNamePage\");\nconst Game = require(\"./classes/game\");\nconst renderSetupPage = require(\"./pages/boardSetupPage\");\nconst renderWinnerPage = require(\"./pages/winnerPage\");\n\nconst root = document.getElementById(\"content\");\nroot.classList.add(\"userNamePage\");\n\nasync function startGame() {\n  try {\n    const playerName = await renderPlayerNamePage(root);\n    const game = new Game(playerName, \"Computer\");\n    root.innerHTML = \"\";\n    root.classList.remove(\"userNamePage\");\n\n\n    document.addEventListener(\"winnerPlayer\", () => {\n      let winnerName = game.player.name;\n      renderWinnerPage(winnerName, root);\n    })\n\n    document.addEventListener(\"winnerCpu\", () => {\n      let winnerName = game.cpu.name;\n      renderWinnerPage(winnerName, root);\n    })\n\n    renderSetupPage(game, root);\n  } catch (error) {\n    console.error(\"Error: \", error);\n  }\n}\n\nstartGame();\n"],"names":[],"sourceRoot":""}